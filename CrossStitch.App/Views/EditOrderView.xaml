<Page x:Class="CrossStitch.App.Views.EditOrderView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:controls="clr-namespace:CrossStitch.App.Controls"
      xmlns:converters="clr-namespace:CrossStitch.App.Converters"
      xmlns:models="clr-namespace:CrossStitch.Core.Models;assembly=CrossStitch.Core"
      DataContext="{Binding EditOrderView, Source={StaticResource ViewModelLocator}}"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="EditOrderView">

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <Grid.Resources>
      <converters:OrderStateToVisibilityConverter x:Key="OrderStateToVisibilityConverter" />
    </Grid.Resources>

    <StackPanel Grid.Row="0" Grid.Column="0">
      <controls:Input Source="{Binding Model.Store, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsReadOnly}" />
      <controls:Input Source="{Binding Model.Description, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsReadOnly}" />
      <controls:Input Source="{Binding Model.DateCreated, Mode=OneWay}" IsReadOnly="True" />
      <controls:Input Source="{Binding Model.DateCompleted, Mode=OneWay}" IsReadOnly="True" Visibility="{Binding IsComplete, Converter={StaticResource BooleanToVisibilityConverter}}" />
      <controls:Input Source="{Binding Model.Status, Mode=OneWay}" IsReadOnly="True" />
    </StackPanel>

    <StackPanel Grid.Row="0" Grid.Column="1" Name="AddThreadInformation" Visibility="{Binding CanEdit, Converter={StaticResource BooleanToVisibilityConverter}}">
      <controls:Input Source="{Binding AddThreadModel.BrandName, UpdateSourceTrigger=PropertyChanged}" />
      <controls:Input Source="{Binding AddThreadModel.BrandId, UpdateSourceTrigger=PropertyChanged}" />
      <Button Content="Add Thread" Command="{Binding AddThreadCommand}" HorizontalAlignment="Stretch" />
    </StackPanel>

    <ListView Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding Model.Threads}" Name="ThreadsDisplay" HorizontalContentAlignment="Center">
      <ListView.View>
        <GridView AllowsColumnReorder="False">
          <GridViewColumn Width="40">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <Border Width="20" Height="20" Background="{Binding ThreadReference.Colour, Converter={StaticResource StringToBrushConverter}}" />
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Width="70" Header="Brand" DisplayMemberBinding="{Binding ThreadReference.BrandName}" controls:GridViewSort.PropertyName="BrandName" />
          <GridViewColumn Width="60" Header="Id" DisplayMemberBinding="{Binding ThreadReference.BrandId}" controls:GridViewSort.PropertyName="BrandId" />
          <GridViewColumn Width="250" Header="Description" DisplayMemberBinding="{Binding ThreadReference.Description}" controls:GridViewSort.PropertyName="Description" />
          <GridViewColumn Width="100" Header="Length to Order (m)">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <TextBox Width="80" Text="{Binding Length, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ElementName=ThreadsDisplay, Path=DataContext.CanEdit}" />
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Width="60" Header="Skiens" DisplayMemberBinding="{Binding Skiens}" controls:GridViewSort.PropertyName="Skiens" />
          <GridViewColumn Width="100" Header="Inventory" controls:GridViewSort.PropertyName="OwnedLength">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding ThreadReference.OwnedLength}" Style="{StaticResource DefaultText}" Foreground="{Binding HasInventory, Converter={StaticResource BooleanToColourConverter}}" FontWeight="Bold" />
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Header="">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <Button Content="X" Command="{Binding ElementName=ThreadsDisplay, Path=DataContext.DeleteThreadCommand}" CommandParameter="{Binding}" Style="{StaticResource Small}" HorizontalAlignment="Center" ToolTip="Remove the thread from the pattern" />
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
        </GridView>
      </ListView.View>
    </ListView>

    <DockPanel Grid.Row="2" Grid.ColumnSpan="2" LastChildFill="False">
      <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
        <Button Content="Complete Order" Command="{Binding CompleteOrderCommand}" Visibility="{Binding Model.Status, Converter={StaticResource OrderStateToVisibilityConverter}, ConverterParameter={x:Static models:OrderState.AwaitingConfirmation}}" />
        <Button Content="Make Order" Command="{Binding MakeOrderCommand}" Visibility="{Binding Model.Status, Converter={StaticResource OrderStateToVisibilityConverter}, ConverterParameter={x:Static models:OrderState.Created}}" />
        <Button Content="Cancel Order" Command="{Binding CancelOrderCommand}" />
      </StackPanel>

      <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
        <Button Content="Save" Command="{Binding SaveCommand}" />
        <Button Content="Cancel" Command="{Binding CancelCommand}" />
      </StackPanel>
    </DockPanel>
  </Grid>
</Page>